name: Docker Image CI

on:
  push:
    branches:
    - dev
#   pull_request:
#     branches:
#     - dev

jobs:
  Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Testing Docker image 
        run: docker build -t test ./

      - name: Run Unit Tests
        run: docker run test sh -c "CI=true npm run test:ci"
  
  Build-And-Push:
    needs: Unit-Tests
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - name: Build Images
      run: |
        docker build -f ./Dockerfile -t $DOCKERHUB_USERNAME/tessera-backend-dev .
        docker build -f ./nginx/Dockerfile -t $DOCKERHUB_USERNAME/tessera-nginx-dev ./nginx
    - name: Push To Docker-Hub
      run: |
        echo $DOCKERHUB_ACCESS_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
        docker push $DOCKERHUB_USERNAME/tessera-backend-dev
        docker push $DOCKERHUB_USERNAME/tessera-nginx-dev
        
  Deploy:
    needs: Build-And-Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Generate Deployment Package
      run: zip deploy.zip docker-compose.yml

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ vars.AWS_APP_NAME }}
        environment_name: ${{ vars.AWS_ENV }}
        version_label: ${{ vars.AWS_VERSION }}
        use_existing_version_if_available: true
        region: ${{ vars.AWS_REGION }}
        deployment_package: deploy.zip

